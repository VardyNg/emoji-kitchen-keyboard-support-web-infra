name: Deploy Terraform on Azure

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AZDO_PERSONAL_ACCESS_TOKEN: ${{ secrets.AZDO_PERSONAL_ACCESS_TOKEN }}
      AZDO_ORG_SERVICE_URL: ${{ secrets.AZDO_ORG_SERVICE_URL }}
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      TF_VAR_cloudflare_zone_id: ${{ secrets.TF_VAR_CLOUDFLARE_ZONE_ID }}
      TF_VAR_web_github_pat: ${{ secrets.TF_VAR_WEB_GITHUB_PAT }}
      TF_VAR_app_name: ${{ secrets.APP_NAME }}
      TF_VAR_rg_location: ${{ secrets.RESOURCE_GROUP_LOCATION }}
      ARM_CLIENT_ID: ${{ secrets.AZ_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZ_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.AZ_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZ_SUBSCRIPTION_ID }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.7

      - name: Set environment variables
        run: |
          echo "SA_NAME=\${{ env.TF_VAR_app_name }}sa" >> $GITHUB_ENV

      - name: Create backend.config file
        run: |
          echo "resource_group_name = \${{ env.TF_VAR_app_name }}"  > backend.config
          echo "storage_account_name = \${{ env.SA_NAME }}"         >> backend.config
          echo 'container_name       = "tfstate"'                   >> backend.conf
          echo 'key                  = "terraform.tfstate"'         >> backend.conf
          echo 'subscription_id      = \${{ env.ARM_SUBSCRIPTION_ID }}"'      >> backend.conf

          cat backend.conf

      - name: Initialize Terraform
        run: |
          terraform init \
            -input=false \
            -backend-config=backend.conf

      - name: Deploy Terraform
        run: terraform plan
        # run: terraform apply -auto-approve

